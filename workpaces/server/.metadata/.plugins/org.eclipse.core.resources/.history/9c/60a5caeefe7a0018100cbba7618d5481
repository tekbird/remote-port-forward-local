package net.portforward.server;

import java.io.IOException;

import javax.websocket.OnClose;
import javax.websocket.OnError;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.PathParam;
import javax.websocket.server.ServerEndpoint;

import org.pmw.tinylog.Logger;

@ServerEndpoint(value = "/ep/{port}")
public class EndPoint {

	private Proxy proxy;

	@OnOpen
	public void onOpen(Session session, @PathParam("port") int port) throws IOException {
		Logger.info("new session opened on {} with session id {}", port, session.getId());
		this.proxy = new Proxy(port, session);
		try {
			this.proxy.Start();
		} catch (Exception e) {
			Logger.error("proxy start failed: {}", e.getMessage());
		}
	}

	@OnMessage
	public void onMessage(Session session, byte[] bytes) throws IOException {
		Logger.info("message of size {} received for session id {}", bytes.length, session.getId());
		this.proxy.WriteData(bytes);
	}

	@OnClose
	public void onClose(Session session) throws IOException {
		Logger.info("client initiated close for session id {}", session.getId());
		this.proxy.Close();
	}

	@OnError
	public void onError(Session session, Throwable throwable) {
		Logger.error("websocket session errored: {}", throwable.getMessage());
		this.proxy.Close();
	}
}
